apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: api-service
  labels:
    app: api-service
    app.kubernetes.io/name: api-service
    app.kubernetes.io/part-of: parent-child-testing
spec:
  serviceName: api-service
  replicas: 1
  selector:
    matchLabels:
      app: api-service
  template:
    metadata:
      labels:
        app: api-service
        app.kubernetes.io/name: api-service
        app.kubernetes.io/part-of: parent-child-testing
    spec:
      containers:
      - name: api-service
        image: node:16-alpine
        command: [ "node", "-e", "require('http').createServer((req, res) => { res.writeHead(200); res.end('API Service Running'); }).listen(3000)" ]
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "development"
        - name: PORT
          value: "3000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: api-service-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: api-service-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: api-service-secrets
              key: jwt-secret
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
